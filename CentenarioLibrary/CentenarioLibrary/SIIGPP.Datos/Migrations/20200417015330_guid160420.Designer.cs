// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIIGPP.Datos;

namespace SIIGPP.Datos.Migrations
{
    [DbContext(typeof(DbContextSIIGPP))]
    [Migration("20200417015330_guid160420")]
    partial class guid160420
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Ampliacion.AmpDec", b =>
                {
                    b.Property<int>("idAmpliacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agencia");

                    b.Property<string>("AmpliacionDeclaracion");

                    b.Property<string>("ClasificacionPersona");

                    b.Property<string>("DirSubProcu");

                    b.Property<string>("Distrito");

                    b.Property<DateTime>("FechaAD")
                        .HasColumnType("DateTime");

                    b.Property<int>("HechoId");

                    b.Property<string>("Numerooficio");

                    b.Property<int>("PersonaId");

                    b.Property<string>("TRepresentantes");

                    b.Property<string>("Tipo");

                    b.Property<string>("u_Modulo");

                    b.Property<string>("u_Nombre");

                    b.Property<string>("u_Puesto");

                    b.HasKey("idAmpliacion");

                    b.HasIndex("HechoId");

                    b.HasIndex("PersonaId");

                    b.ToTable("CAT_AMPDEC");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Arma.RArma", b =>
                {
                    b.Property<int>("IdRarma")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agencia")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Calibre");

                    b.Property<string>("DescripcionAr");

                    b.Property<string>("Distrito")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FechaRegistro");

                    b.Property<DateTime>("FechaSys");

                    b.Property<string>("Marca");

                    b.Property<string>("Matricula");

                    b.Property<string>("Modelo");

                    b.Property<string>("Modulo");

                    b.Property<string>("NombreAr");

                    b.Property<string>("Puesto")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("RHechoId");

                    b.Property<string>("Subproc")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TipoAr");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IdRarma");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_ARMA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Bitacora.RBitacora", b =>
                {
                    b.Property<int>("IdBitacora")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agencia");

                    b.Property<string>("Descipcion");

                    b.Property<string>("Dirsubproc");

                    b.Property<string>("Distrito");

                    b.Property<string>("Fechareporte");

                    b.Property<DateTime?>("Fechasis")
                        .HasColumnType("DateTime");

                    b.Property<int>("IdPersona");

                    b.Property<string>("Numerooficio");

                    b.Property<string>("Puesto");

                    b.Property<string>("Tipo");

                    b.Property<string>("Usuario");

                    b.Property<int>("rHechoId");

                    b.HasKey("IdBitacora");

                    b.HasIndex("IdPersona");

                    b.HasIndex("rHechoId");

                    b.ToTable("CAT_BITACORA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.C5i.C5", b =>
                {
                    b.Property<int>("IdC5")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agentequerecibe");

                    b.Property<string>("CorreoElecS");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Direccion5");

                    b.Property<string>("Encargadoc5");

                    b.Property<string>("FechaStatus");

                    b.Property<DateTime>("FechaSys");

                    b.Property<string>("HoraStatus");

                    b.Property<string>("NumeroOficio");

                    b.Property<string>("NumtelefonicoS");

                    b.Property<bool>("Op1");

                    b.Property<bool>("Op2");

                    b.Property<bool>("Op3");

                    b.Property<bool>("Op4");

                    b.Property<bool>("Op5");

                    b.Property<string>("Op5Texto");

                    b.Property<bool>("Op6");

                    b.Property<bool>("Op7");

                    b.Property<string>("Puestoc5");

                    b.Property<int>("RHechoId");

                    b.Property<string>("RazonDescripcion");

                    b.Property<int>("Status");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("UUsuario");

                    b.HasKey("IdC5");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_C5FORMATOS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.CArchivos.Archivos", b =>
                {
                    b.Property<int>("IdArchivos")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionDocumento");

                    b.Property<string>("Fecha");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("NombreDocumento");

                    b.Property<int>("RHechoId");

                    b.Property<string>("Ruta");

                    b.Property<string>("TipoDocumento");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdArchivos");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_ARCHIVOS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Citatorio_Notificacion.RCitatorio_Notificacion", b =>
                {
                    b.Property<int>("IdCitatorio_Notificacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agencia")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Delito");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Distrito")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DomicilioPersona");

                    b.Property<string>("FechaCita");

                    b.Property<string>("FechaReporte");

                    b.Property<DateTime>("FechaSis");

                    b.Property<string>("Hora");

                    b.Property<string>("LugarCita");

                    b.Property<string>("Modulo");

                    b.Property<string>("NombrePersona");

                    b.Property<string>("Nuc");

                    b.Property<string>("NumeroOficio");

                    b.Property<string>("Puesto")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("RHechoId");

                    b.Property<string>("ReferenciaPersona");

                    b.Property<string>("Subproc")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TelefonoPersona");

                    b.Property<string>("Textofinal");

                    b.Property<bool>("Tipo");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IdCitatorio_Notificacion");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_RCITATORIO_NOTIFICACION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Datos_Relacionados.DatosRelacionados", b =>
                {
                    b.Property<int>("IdDatosRelacionados")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<DateTime>("Fechasys");

                    b.Property<int>("RHechoId");

                    b.Property<string>("Tipo");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdDatosRelacionados");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_DATOSRELACIONADOS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.DatosProtegidos.DatoProtegido", b =>
                {
                    b.Property<int>("IdDatosProtegidos")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AMaterno");

                    b.Property<string>("APaterno");

                    b.Property<string>("CURP");

                    b.Property<string>("FechaNacimiento");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("Nombre");

                    b.Property<int>("RAPId");

                    b.Property<string>("RFC");

                    b.Property<string>("Rutadocumento");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdDatosProtegidos");

                    b.HasIndex("RAPId");

                    b.ToTable("CAT_DATO_PROTEGIDO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.DDerivacion.RDDerivacion", b =>
                {
                    b.Property<int>("idRDDerivacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Espesificaciones");

                    b.Property<string>("FechaDerivacion");

                    b.Property<DateTime?>("FechaSys")
                        .HasColumnType("DateTime");

                    b.Property<string>("UPuesto");

                    b.Property<int>("idDDerivacion");

                    b.Property<int>("rHechoId");

                    b.Property<string>("uAgencia");

                    b.Property<string>("uDirSubPro");

                    b.Property<string>("uDistrito");

                    b.Property<string>("uNombre");

                    b.HasKey("idRDDerivacion");

                    b.HasIndex("idDDerivacion");

                    b.HasIndex("rHechoId");

                    b.ToTable("CAT_RDDERIVACION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Diligencias.RDiligencias", b =>
                {
                    b.Property<int>("IdRDiligencias")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ASPId");

                    b.Property<string>("Agencia");

                    b.Property<bool>("ConIndicio");

                    b.Property<string>("DirSubPro");

                    b.Property<bool>("Dirigido");

                    b.Property<string>("Dirigidoa");

                    b.Property<string>("EmitidoPor");

                    b.Property<string>("Especificaciones");

                    b.Property<DateTime>("FechaRecibidoF");

                    b.Property<string>("FechaSolicitud");

                    b.Property<DateTime>("FechaSys");

                    b.Property<string>("Lat");

                    b.Property<string>("Lng");

                    b.Property<string>("Modulo");

                    b.Property<string>("NUC");

                    b.Property<string>("NodeSolicitud");

                    b.Property<string>("NumeroDistrito");

                    b.Property<string>("NumeroOficio");

                    b.Property<string>("Prioridad");

                    b.Property<bool>("RecibidoF");

                    b.Property<string>("Respuestas");

                    b.Property<string>("Servicio");

                    b.Property<string>("StatusRespuesta");

                    b.Property<string>("Textofinal");

                    b.Property<string>("UPuesto");

                    b.Property<int>("rHechoId");

                    b.Property<string>("uDirSubPro");

                    b.HasKey("IdRDiligencias");

                    b.HasIndex("ASPId");

                    b.HasIndex("rHechoId");

                    b.ToTable("CAT_RDILIGENCIAS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Direcciones.DireccionDelito", b =>
                {
                    b.Property<int>("IdDDelito")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CP");

                    b.Property<string>("Calle")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EntreCalle1")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EntreCalle2")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Localidad")
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("LugarEspecifico");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("NoExt")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NoInt")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("RHechoId");

                    b.Property<string>("Referencia");

                    b.Property<string>("lat");

                    b.Property<string>("lng");

                    b.HasKey("IdDDelito");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_DIRECCION_DELITO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Direcciones.DireccionEscucha", b =>
                {
                    b.Property<int>("IdDEscucha")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CP");

                    b.Property<string>("Calle")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EntreCalle1")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EntreCalle2")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Localidad")
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("NoExt")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NoInt")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("RAPId");

                    b.Property<string>("Referencia");

                    b.Property<string>("lat");

                    b.Property<string>("lng");

                    b.HasKey("IdDEscucha");

                    b.HasIndex("RAPId");

                    b.ToTable("CAT_DIRECCION_ESCUCHA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Direcciones.DireccionPersonal", b =>
                {
                    b.Property<int>("IdDPersonal")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CP")
                        .HasColumnType("int");

                    b.Property<string>("Calle")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EntreCalle1")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EntreCalle2")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Localidad")
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("NoExt")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NoInt")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("PersonaId");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("lat");

                    b.Property<string>("lng");

                    b.HasKey("IdDPersonal");

                    b.HasIndex("PersonaId");

                    b.ToTable("CAT_DIRECCION_PERSONAL");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.GNUC.Nuc", b =>
                {
                    b.Property<int>("idNuc")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AConsecutivo");

                    b.Property<int>("AgenciaId");

                    b.Property<int>("Año");

                    b.Property<string>("CveAgencia");

                    b.Property<string>("CveDistrito");

                    b.Property<int>("DConsecutivo");

                    b.Property<int>("DistritoId");

                    b.Property<string>("Indicador");

                    b.Property<string>("StatusNUC");

                    b.Property<string>("nucg");

                    b.HasKey("idNuc");

                    b.HasIndex("AgenciaId");

                    b.HasIndex("DistritoId");

                    b.ToTable("NUC");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.GRAC.Rac", b =>
                {
                    b.Property<int>("idRac")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AConsecutivo");

                    b.Property<int>("AgenciaId");

                    b.Property<int>("Año");

                    b.Property<string>("CveAgencia");

                    b.Property<string>("CveDistrito");

                    b.Property<int>("DConsecutivo");

                    b.Property<int>("DistritoId");

                    b.Property<string>("Indicador");

                    b.Property<string>("racg");

                    b.HasKey("idRac");

                    b.HasIndex("AgenciaId");

                    b.HasIndex("DistritoId");

                    b.ToTable("RAC");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.ImpProceso.CondImpProceso", b =>
                {
                    b.Property<int>("idConImpProceso")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agencia");

                    b.Property<string>("AutoridadEjecutora");

                    b.Property<string>("ConduccionImputadoProceso");

                    b.Property<string>("DirSubProc");

                    b.Property<string>("Distrito");

                    b.Property<string>("FechaHoraAudienciaOrdenAprehencion");

                    b.Property<DateTime>("FechaHoraCancelacionOrdenAprehecion")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("FechaHoraCitacion")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("FechaHoraEjecucionOrdenAprehecion")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("FechaSys")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("FechahoraComparecencia")
                        .HasColumnType("DateTime");

                    b.Property<string>("OrdeAprehension");

                    b.Property<bool>("OrdenReaprehesion");

                    b.Property<int>("PersonaId");

                    b.Property<string>("PlazoResolverSituacionJuridica");

                    b.Property<string>("Puesto");

                    b.Property<int>("RHechoId");

                    b.Property<string>("ResultadoOrdenAprehension");

                    b.Property<string>("Usuario");

                    b.HasKey("idConImpProceso");

                    b.HasIndex("PersonaId");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_CONDIMPPRO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Indicios.DetalleSeguimientoIndicio", b =>
                {
                    b.Property<int>("IdDetalles")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DestinoLugar");

                    b.Property<DateTime>("FechaHora");

                    b.Property<string>("Fechasys");

                    b.Property<int>("IndiciosId");

                    b.Property<string>("OrigenLugar")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("QuienEntrega")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("QuienRecibe")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdDetalles");

                    b.HasIndex("IndiciosId");

                    b.ToTable("CAT_DETALLE_SEGUIMIENTO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Indicios.Indicios", b =>
                {
                    b.Property<int>("IdIndicio")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agencia")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Calibre");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Distrito")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("InstitucionQI");

                    b.Property<string>("Marca");

                    b.Property<string>("Matricula");

                    b.Property<string>("Modelo");

                    b.Property<string>("Modulo");

                    b.Property<string>("Puesto")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("QIniciaCadena");

                    b.Property<int>("RHechoId");

                    b.Property<string>("Status");

                    b.Property<string>("Subproc")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TipoIndicio");

                    b.Property<string>("UltimaUbicacion");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IdIndicio");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_INDICIOS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.MedAfiliacion.ArchivosMediaAfiliacion", b =>
                {
                    b.Property<int>("IdArchivosMediaAfiliacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionDocumento");

                    b.Property<DateTime>("Fechasys");

                    b.Property<int>("MediaAfiliacionid");

                    b.Property<string>("Puesto");

                    b.Property<string>("Ruta");

                    b.Property<string>("TipoDocumento");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdArchivosMediaAfiliacion");

                    b.HasIndex("MediaAfiliacionid");

                    b.ToTable("PI_ARCHIVOSMEDIAAFILIACION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.MedAfiliacion.MediaAfiliacion", b =>
                {
                    b.Property<int>("idMediaAfiliacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agencia");

                    b.Property<bool>("Anteojos");

                    b.Property<bool>("Barba");

                    b.Property<string>("Cejas");

                    b.Property<string>("ColoOjos");

                    b.Property<string>("ColorCabello");

                    b.Property<string>("Complexion");

                    b.Property<string>("DirSubProc");

                    b.Property<string>("Distrito");

                    b.Property<decimal>("Estatura");

                    b.Property<DateTime>("FechaSys")
                        .HasColumnType("DateTime");

                    b.Property<string>("FormaCabello");

                    b.Property<string>("FormaCara");

                    b.Property<string>("FormaMenton");

                    b.Property<string>("GrosorLabios");

                    b.Property<string>("LargoCabello");

                    b.Property<string>("Numerooficio");

                    b.Property<int>("PersonaId");

                    b.Property<decimal>("Peso");

                    b.Property<string>("Puesto");

                    b.Property<int>("RHechoId");

                    b.Property<bool>("SParticulares");

                    b.Property<string>("SeñasParticulares");

                    b.Property<string>("TamañoBoca");

                    b.Property<string>("TamañoNariz");

                    b.Property<string>("TamañoOrejas");

                    b.Property<string>("Tez");

                    b.Property<string>("TipoCejas");

                    b.Property<string>("TipoFrente");

                    b.Property<string>("TipoNariz");

                    b.Property<string>("TipoOjo");

                    b.Property<string>("Usuario");

                    b.HasKey("idMediaAfiliacion");

                    b.HasIndex("PersonaId");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_MEDIAAFILIACION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.MedCautelares.MedidasCautelares", b =>
                {
                    b.Property<int>("IdMedCautelares")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agencia");

                    b.Property<string>("DirSubProc");

                    b.Property<string>("Distrito");

                    b.Property<DateTime>("FechaInicio");

                    b.Property<DateTime>("FechaSys")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("FechaTermino");

                    b.Property<string>("MedidaCautelar");

                    b.Property<int>("PersonaId");

                    b.Property<string>("Puesto");

                    b.Property<int>("RHechoId");

                    b.Property<string>("Tiempo");

                    b.Property<string>("Usuario");

                    b.HasKey("IdMedCautelares");

                    b.HasIndex("PersonaId");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_MEDIDASCAUTELARES");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.MedidasProteccion.Medidasproteccion", b =>
                {
                    b.Property<int>("IdMProteccion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agencia");

                    b.Property<string>("Agente");

                    b.Property<bool>("Ampliacion");

                    b.Property<string>("Delito");

                    b.Property<string>("Destinatarion");

                    b.Property<bool>("Detalleactivo");

                    b.Property<string>("Distrito")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Domicilio");

                    b.Property<string>("Domicilion");

                    b.Property<int>("Duracion");

                    b.Property<string>("FAmpliacion");

                    b.Property<string>("FInicio");

                    b.Property<string>("FVencimiento");

                    b.Property<string>("Fechahora");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("FterminoAm");

                    b.Property<string>("Imputado");

                    b.Property<string>("Institucionejec");

                    b.Property<string>("Lugar");

                    b.Property<string>("MedidaProtecion");

                    b.Property<string>("Modulo");

                    b.Property<string>("Narrativa");

                    b.Property<string>("Nomedidas");

                    b.Property<string>("Nuc");

                    b.Property<string>("NumeroOficio");

                    b.Property<string>("NumeroOficioN");

                    b.Property<string>("Puesto")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("RHechoId");

                    b.Property<string>("Ratificacion");

                    b.Property<string>("Subproc")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Telefono");

                    b.Property<string>("Textofinal");

                    b.Property<string>("Textofinal2");

                    b.Property<string>("Textofinaldetalle");

                    b.Property<string>("UAgencia")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Victima");

                    b.HasKey("IdMProteccion");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_MEDIDASPROTECCION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.NoEjerciciosApenal.NoEjercicioApenal", b =>
                {
                    b.Property<int>("IdNoEjercicioApenal")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnosTranscurridos");

                    b.Property<bool>("Art123");

                    b.Property<string>("ArticuloLegislador");

                    b.Property<string>("ArticulosCp");

                    b.Property<string>("Delito");

                    b.Property<string>("Denunciante");

                    b.Property<int>("DiasTranscurridos");

                    b.Property<string>("EDHipotesis");

                    b.Property<string>("EDRazonar");

                    b.Property<string>("ERPCausaInculpabilidad");

                    b.Property<string>("ERPRazonar");

                    b.Property<bool>("ExcluyenteDelito");

                    b.Property<bool>("ExentoResponsabilidadPenal");

                    b.Property<DateTime>("FFechaInterposicionMp");

                    b.Property<DateTime>("FFechaLimiteQI");

                    b.Property<DateTime>("FechaEjercerAcion");

                    b.Property<DateTime>("FechaEntrevista");

                    b.Property<DateTime>("FechaHecho");

                    b.Property<DateTime>("FechaResolucionconsulta");

                    b.Property<DateTime>("FechaSys");

                    b.Property<DateTime>("FechaUltimoActo");

                    b.Property<string>("IFFechaFallecimiento");

                    b.Property<string>("IFImputadoNombre");

                    b.Property<bool>("ImputadoFallecio");

                    b.Property<int>("MesesTranscurridos");

                    b.Property<string>("NCDElementospenal");

                    b.Property<string>("NCDRazonar");

                    b.Property<bool>("NoConstituyeDelito");

                    b.Property<string>("NumeroOficio");

                    b.Property<bool>("OficioQuerella");

                    b.Property<bool>("Op1");

                    b.Property<bool>("Op2");

                    b.Property<bool>("Op3");

                    b.Property<bool>("Op4");

                    b.Property<DateTime>("POFechaPerdon");

                    b.Property<string>("PONombreFirmas");

                    b.Property<int>("PONumeroFirmas");

                    b.Property<DateTime>("POVFFTratamiento");

                    b.Property<DateTime>("POVFITratamiento");

                    b.Property<string>("POVReparacionDaño");

                    b.Property<bool>("POViolenciaMuMeOG");

                    b.Property<bool>("PerdonOfendido");

                    b.Property<string>("PunibilidadMaximo");

                    b.Property<string>("PunibilidadMinimo");

                    b.Property<int>("RHechoId");

                    b.Property<DateTime>("TAccionPenalFecha");

                    b.Property<DateTime>("TFechaQuerella");

                    b.Property<DateTime>("TOperacionAritmeticaFecha");

                    b.Property<string>("TUltimoActoInvestigacion");

                    b.Property<bool>("TipoPrescripcion");

                    b.Property<bool>("TipoQuerella");

                    b.Property<bool>("Tipopena");

                    b.Property<string>("Ttipodelito");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("UUsuario");

                    b.HasKey("IdNoEjercicioApenal");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_NOEJERCICIOAPENAL");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Oficios.Oficio", b =>
                {
                    b.Property<int>("IdOficios")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("NumeroOficio");

                    b.Property<int>("RHechoId");

                    b.Property<string>("Texto");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdOficios");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_OFICIO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", b =>
                {
                    b.Property<int>("IdRHecho")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Agenciaid");

                    b.Property<DateTime?>("FechaElevaNuc")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("FechaElevaNuc2");

                    b.Property<DateTime?>("FechaHoraSuceso")
                        .HasColumnType("DateTime");

                    b.Property<string>("FechaReporte");

                    b.Property<int>("ModuloServicioId");

                    b.Property<string>("NarrativaHechos");

                    b.Property<int?>("NucId");

                    b.Property<int>("RAtencionId");

                    b.Property<string>("RBreve");

                    b.Property<bool>("Status");

                    b.Property<string>("Vanabim");

                    b.HasKey("IdRHecho");

                    b.HasIndex("Agenciaid");

                    b.HasIndex("ModuloServicioId");

                    b.HasIndex("NucId");

                    b.HasIndex("RAtencionId");

                    b.ToTable("CAT_RHECHO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.RActosInvestigacion.ActosInDetalle", b =>
                {
                    b.Property<int>("IdActosInDetetalle")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Conclusion");

                    b.Property<string>("FechaAceptado");

                    b.Property<string>("FechaEntregado");

                    b.Property<string>("FechaFinalizado");

                    b.Property<string>("FechaRecibido");

                    b.Property<DateTime>("FechaSys");

                    b.Property<int>("RActosInvestigacionId");

                    b.Property<string>("Respuesta");

                    b.Property<string>("Servicio");

                    b.Property<string>("ServicioNM");

                    b.Property<string>("Status");

                    b.Property<string>("TextoFinal");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDirSubPro");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("UUsuario");

                    b.Property<DateTime>("UltmimoStatus");

                    b.HasKey("IdActosInDetetalle");

                    b.HasIndex("RActosInvestigacionId");

                    b.ToTable("CAT_RACTOSINDETALLES");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.RActosInvestigacion.RActoInvestigacion", b =>
                {
                    b.Property<int>("IdRActosInvestigacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Cdetenido");

                    b.Property<string>("Especificaciones");

                    b.Property<string>("FechaSolicitud");

                    b.Property<DateTime>("FechaSys");

                    b.Property<string>("NUC");

                    b.Property<string>("NodeSolicitud");

                    b.Property<string>("NumeroDistrito");

                    b.Property<string>("NumeroOficio");

                    b.Property<int>("RHechoId");

                    b.Property<string>("Respuestas");

                    b.Property<string>("Servicios");

                    b.Property<string>("Status");

                    b.Property<string>("Textofinal");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDirSubPro");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("UUsuario");

                    b.HasKey("IdRActosInvestigacion");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_RACTOSINVESTIGACION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.RDHecho.RDH", b =>
                {
                    b.Property<int>("IdRDH")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArmaBlanca");

                    b.Property<bool>("ArmaFuego");

                    b.Property<string>("ClasificaOrdenResult");

                    b.Property<string>("ConAlgunaParteCuerpo");

                    b.Property<string>("Concurso");

                    b.Property<string>("ConotroElemento");

                    b.Property<int>("DelitoId");

                    b.Property<bool>("Equiparado");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("GraveNoGrave");

                    b.Property<string>("IntensionDelito");

                    b.Property<decimal>("MontoRobado");

                    b.Property<string>("Observaciones");

                    b.Property<int>("RHechoId");

                    b.Property<string>("ReclasificacionDelito");

                    b.Property<string>("ResultadoDelito");

                    b.Property<string>("Tipo");

                    b.Property<string>("TipoDeclaracion");

                    b.Property<string>("TipoFuero");

                    b.Property<string>("TipoRobado");

                    b.Property<string>("ViolenciaSinViolencia");

                    b.HasKey("IdRDH");

                    b.HasIndex("DelitoId");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_RDH");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Registro.DocumentosPesona", b =>
                {
                    b.Property<int>("IdDocumentoPersona")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agencia");

                    b.Property<string>("Descripcion");

                    b.Property<string>("DirSubProc");

                    b.Property<string>("Distrito");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("DateTime");

                    b.Property<string>("NombreDocumento");

                    b.Property<int>("PersonaId");

                    b.Property<string>("Puesto");

                    b.Property<string>("Ruta");

                    b.Property<string>("TipoDocumento");

                    b.Property<string>("Usuario");

                    b.HasKey("IdDocumentoPersona");

                    b.HasIndex("PersonaId");

                    b.ToTable("CAT_DOCSPERSONA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Registro.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias");

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApellidoPaterno")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CURP");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("DatosProtegidos");

                    b.Property<bool>("Discapacidad")
                        .HasColumnType("bit");

                    b.Property<string>("DocIdentificacion");

                    b.Property<string>("EntidadFederativa");

                    b.Property<string>("EstadoCivil")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FechaNacimiento")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Genero");

                    b.Property<string>("Lengua")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Medionotificacion")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NivelEstudio")
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ocupacion")
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("Parentesco");

                    b.Property<string>("RFC")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("StatusAlias");

                    b.Property<bool>("StatusAnonimo");

                    b.Property<string>("Telefono1")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono2")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoDiscapacidad")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TipoPersona")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdPersona");

                    b.ToTable("CAT_PERSONA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Registro.RAP", b =>
                {
                    b.Property<int>("IdRAP")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClasificacionPersona")
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("PInicio");

                    b.Property<int>("PersonaId");

                    b.Property<int>("RAtencionId");

                    b.HasKey("IdRAP");

                    b.HasIndex("PersonaId");

                    b.HasIndex("RAtencionId");

                    b.ToTable("CAT_RAP");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Registro.RAtencion", b =>
                {
                    b.Property<int>("IdRAtencion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgenciaInicial")
                        .HasColumnType("NvarChar(50)");

                    b.Property<bool>("ContencionVicitma");

                    b.Property<string>("DirSubProcuInicial");

                    b.Property<string>("DistritoInicial")
                        .HasColumnType("NvarChar(50)");

                    b.Property<DateTime?>("FechaHoraAtencion")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("FechaHoraCierre")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("FechaHoraRegistro")
                        .HasColumnType("DateTime");

                    b.Property<string>("MedioDenuncia");

                    b.Property<string>("ModuloServicio");

                    b.Property<bool>("StatusAtencion")
                        .HasColumnType("bit");

                    b.Property<bool>("StatusRegistro")
                        .HasColumnType("bit");

                    b.Property<int>("racId");

                    b.Property<string>("u_Modulo");

                    b.Property<string>("u_Nombre")
                        .HasColumnType("NvarChar(100)");

                    b.Property<string>("u_Puesto");

                    b.HasKey("IdRAtencion");

                    b.HasIndex("racId");

                    b.ToTable("CAT_RATENCON");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Representantes.DocsRepresentantes", b =>
                {
                    b.Property<int>("IdDocsRepresentantes")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionDocumento");

                    b.Property<string>("Fecha");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("NombreDocumento");

                    b.Property<int>("RepresentanteId");

                    b.Property<string>("Ruta");

                    b.Property<string>("TipoDocumento");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdDocsRepresentantes");

                    b.HasIndex("RepresentanteId");

                    b.ToTable("CAT_DOCSREPRESENTANTES");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Representantes.Representante", b =>
                {
                    b.Property<int>("IdRepresentante")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoMa");

                    b.Property<string>("ApellidoPa");

                    b.Property<string>("CedulaProfesional");

                    b.Property<string>("CorreoElectronico");

                    b.Property<string>("Curp");

                    b.Property<string>("EntidadFeNacimiento");

                    b.Property<string>("Fecha");

                    b.Property<string>("FechaNacimiento");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("Genero");

                    b.Property<string>("MedioNotificacion");

                    b.Property<string>("Nacionalidad");

                    b.Property<string>("Nombres");

                    b.Property<int>("PersonaId");

                    b.Property<int>("RHechoId");

                    b.Property<string>("Sexo");

                    b.Property<string>("Telefono");

                    b.Property<int>("Tipo1");

                    b.Property<int>("Tipo2");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdRepresentante");

                    b.HasIndex("PersonaId");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_REPRESENTANTES");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Terminacion.DeterminacionArchivo", b =>
                {
                    b.Property<int>("IdDeterminacionArchivo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aifr");

                    b.Property<string>("Articulos");

                    b.Property<string>("ClasificacionPersona");

                    b.Property<string>("Delito");

                    b.Property<string>("Fecha");

                    b.Property<string>("FechaIHecho");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("MedioDenuncia");

                    b.Property<string>("MunicionEstado");

                    b.Property<string>("Municipio");

                    b.Property<string>("NumeroOficio");

                    b.Property<string>("Opcion1");

                    b.Property<string>("Opcion2");

                    b.Property<int>("RHechoId");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("UUAgencia");

                    b.Property<string>("Usuario");

                    b.HasKey("IdDeterminacionArchivo");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_TERMINACIONARCHIVO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Terminacion.RInconpentencia", b =>
                {
                    b.Property<int>("IdInconpentencia")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Articulos");

                    b.Property<string>("Dependencia");

                    b.Property<string>("Fecha");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("NumeroOficio");

                    b.Property<string>("RBreve");

                    b.Property<int>("RHechoId");

                    b.Property<string>("TextoFinal");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("UUAgencia");

                    b.Property<string>("Usuario");

                    b.HasKey("IdInconpentencia");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_INCOMPETENCIA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Turnador.AmpoTurno", b =>
                {
                    b.Property<int>("IdAmpoTurno")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ModuloServicioId");

                    b.Property<int?>("TurnoId");

                    b.HasKey("IdAmpoTurno");

                    b.HasIndex("ModuloServicioId");

                    b.HasIndex("TurnoId");

                    b.ToTable("CAT_AMPOTURNO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Turnador.Turno", b =>
                {
                    b.Property<int>("IdTurno")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgenciaId");

                    b.Property<DateTime?>("FechaHoraFin")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("FechaHoraInicio")
                        .HasColumnType("DateTime");

                    b.Property<string>("Modulo");

                    b.Property<int>("NoTurno")
                        .HasColumnType("int");

                    b.Property<int>("RAtencionId");

                    b.Property<string>("Serie")
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("StatusReAsignado");

                    b.HasKey("IdTurno");

                    b.HasIndex("AgenciaId");

                    b.HasIndex("RAtencionId");

                    b.ToTable("CAT_TURNO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.VehiculoImplicito.Vehiculo", b =>
                {
                    b.Property<int>("IdVehiculo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agencia")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ano");

                    b.Property<string>("Color");

                    b.Property<bool>("Devuelto");

                    b.Property<string>("Distrito")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DomicilioDenunciante");

                    b.Property<bool>("Estado");

                    b.Property<bool>("EstadoRobado");

                    b.Property<string>("Estadov");

                    b.Property<string>("FechaRegistro");

                    b.Property<string>("FechaRobo");

                    b.Property<DateTime>("FechaSys");

                    b.Property<string>("Lugar");

                    b.Property<string>("Lugardeposito");

                    b.Property<string>("Marca");

                    b.Property<string>("Modalidad");

                    b.Property<string>("Modelo");

                    b.Property<string>("Modulo");

                    b.Property<string>("Municipio");

                    b.Property<string>("NoSerieMotor");

                    b.Property<string>("NombreDenunciante");

                    b.Property<string>("NumeroOficio");

                    b.Property<string>("Placas");

                    b.Property<string>("Propietario");

                    b.Property<string>("Puesto")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("RHechoId");

                    b.Property<string>("Recepcion");

                    b.Property<bool>("Recuperado");

                    b.Property<string>("SenasParticulares");

                    b.Property<string>("Serie");

                    b.Property<string>("Subproc")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Tipo");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IdVehiculo");

                    b.HasIndex("RHechoId");

                    b.ToTable("CAT_VEHICULO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_ActosInvestigacion.ActoInvestigacion", b =>
                {
                    b.Property<int>("IdActonvestigacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre");

                    b.Property<string>("Nomenclatura");

                    b.Property<bool>("RAutorizacion");

                    b.HasKey("IdActonvestigacion");

                    b.ToTable("C_ACTOSINVESTIGACION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Armas.ArmaObjeto", b =>
                {
                    b.Property<int>("IdArmaObjeto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClasificacionArmaId");

                    b.Property<string>("nombreAO");

                    b.HasKey("IdArmaObjeto");

                    b.HasIndex("ClasificacionArmaId");

                    b.ToTable("CAR_ARMAOBJETO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Armas.Calibre", b =>
                {
                    b.Property<int>("IdCalibre")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Numero");

                    b.HasKey("IdCalibre");

                    b.ToTable("CAR_CALIBRE");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Armas.ClasificacionArma", b =>
                {
                    b.Property<int>("IdClasificacionArma")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Catalogo");

                    b.Property<string>("NombreC");

                    b.HasKey("IdClasificacionArma");

                    b.ToTable("CAR_CLASIFICACIONARMAOB");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Armas.MarcaArma", b =>
                {
                    b.Property<int>("IdMarcaArma")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("IdMarcaArma");

                    b.ToTable("CAR_MARCA_ARMA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_ConfiGlobal.ConfGlobal", b =>
                {
                    b.Property<int>("IdConfGlobal")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Logo1");

                    b.Property<string>("Logo2");

                    b.HasKey("IdConfGlobal");

                    b.ToTable("C_CONFGLOBAL");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Configuracion.ClasificacionPersona", b =>
                {
                    b.Property<int>("IdClasificacionPersona")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("IdClasificacionPersona");

                    b.ToTable("C_CLASIFICACIONPERSONA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Configuracion.DocIdentificacion", b =>
                {
                    b.Property<int>("IdDocIdentificacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("IdDocIdentificacion");

                    b.ToTable("C_DOCIDENTIFICACION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Configuracion.MedioNotificacion", b =>
                {
                    b.Property<int>("IdMedioNotificacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("IdMedioNotificacion");

                    b.ToTable("C_MEDIONOTIFICACION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Configuracion.NivelEstudios", b =>
                {
                    b.Property<int>("IdNivelEstudios")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("IdNivelEstudios");

                    b.ToTable("C_NIVELESTUDIOS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Delito.ClasificaOrdenResult", b =>
                {
                    b.Property<int>("IdClasificaOrdenResult")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("IdClasificaOrdenResult");

                    b.ToTable("CD_CLAORDRES");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Delito.Delito", b =>
                {
                    b.Property<int>("IdDelito")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AltoImpacto");

                    b.Property<string>("CveDelito");

                    b.Property<string>("Nombre");

                    b.Property<string>("OfiNoOfi");

                    b.Property<bool>("SuceptibleMASC");

                    b.Property<bool>("TipoMontoRobo");

                    b.HasKey("IdDelito");

                    b.ToTable("C_DELITO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Delito.IntensionDelito", b =>
                {
                    b.Property<int>("IdIntesionDelio")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("IdIntesionDelio");

                    b.ToTable("CD_INTESIONDELITO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Delito.ResultadoDelito", b =>
                {
                    b.Property<int>("IdResultadoDelito")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("IdResultadoDelito");

                    b.ToTable("CD_RESULTADODELITO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Delito.Tipo", b =>
                {
                    b.Property<int>("IdTipo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("IdTipo");

                    b.ToTable("CD_TIPO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Delito.TipoDeclaracion", b =>
                {
                    b.Property<int>("IdTipoDeclaracion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("IdTipoDeclaracion");

                    b.ToTable("CD_TIPODECLARACION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Delito.TipoFuero", b =>
                {
                    b.Property<int>("IdTipoFuero")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("IdTipoFuero");

                    b.ToTable("CD_TIPOFUERO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.Agencia", b =>
                {
                    b.Property<int>("IdAgencia")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave");

                    b.Property<string>("Contacto");

                    b.Property<int>("DSPId");

                    b.Property<string>("Direccion");

                    b.Property<string>("Nombre");

                    b.Property<string>("Telefono");

                    b.Property<string>("TipoServicio");

                    b.HasKey("IdAgencia");

                    b.HasIndex("DSPId");

                    b.ToTable("C_AGENCIA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.DependeciasDerivacion", b =>
                {
                    b.Property<int>("IdDDerivacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contacto");

                    b.Property<string>("Direccion");

                    b.Property<int>("DistritoId");

                    b.Property<string>("Nombre");

                    b.Property<string>("Telefono");

                    b.HasKey("IdDDerivacion");

                    b.HasIndex("DistritoId");

                    b.ToTable("C_DEPENDECIAS_DERIVACION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.Distrito", b =>
                {
                    b.Property<int>("IdDistrito")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave");

                    b.Property<string>("Contacto");

                    b.Property<string>("Direccion");

                    b.Property<string>("Nombre");

                    b.Property<bool>("StatusAsginacion");

                    b.Property<string>("Telefono");

                    b.HasKey("IdDistrito");

                    b.ToTable("C_DISTRITO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", b =>
                {
                    b.Property<int>("IdModuloServicio")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgenciaId");

                    b.Property<string>("Clave");

                    b.Property<string>("Nombre");

                    b.Property<bool>("ServicioInterno");

                    b.Property<string>("Tipo");

                    b.HasKey("IdModuloServicio");

                    b.HasIndex("AgenciaId");

                    b.ToTable("C_MODULOSERVICIO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Estrucutra.DSP", b =>
                {
                    b.Property<int>("IdDSP")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave");

                    b.Property<int>("DistritoId");

                    b.Property<string>("NombreSubDir");

                    b.Property<string>("Responsable");

                    b.Property<bool>("StatusInicioCarpeta");

                    b.Property<string>("Telefono");

                    b.HasKey("IdDSP");

                    b.HasIndex("DistritoId");

                    b.ToTable("C_DSP");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_FiscaliaOestados.FiscaliaOestado", b =>
                {
                    b.Property<int>("IdFiscaliaOestado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contacto");

                    b.Property<string>("Direccion");

                    b.Property<int>("EstadoId");

                    b.Property<int>("MunicipioId");

                    b.Property<string>("Nombre");

                    b.Property<string>("Telefono");

                    b.HasKey("IdFiscaliaOestado");

                    b.HasIndex("EstadoId");

                    b.HasIndex("MunicipioId");

                    b.ToTable("C_FISCALIAOESTADOS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Generales.EstadoCivil", b =>
                {
                    b.Property<int>("IdECivil")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("IdECivil");

                    b.ToTable("C_ESTADO_CIVIL");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Generales.Genero", b =>
                {
                    b.Property<int>("IdGenero")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("IdGenero");

                    b.ToTable("C_GENERO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Generales.Sexo", b =>
                {
                    b.Property<int>("IdSexo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave");

                    b.Property<string>("Nombre");

                    b.HasKey("IdSexo");

                    b.ToTable("C_SEXO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Incompetencias.Incompetencia", b =>
                {
                    b.Property<int>("IdIncompetencia")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre");

                    b.HasKey("IdIncompetencia");

                    b.ToTable("C_INCOMPETENCIA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Indicios.Institucion", b =>
                {
                    b.Property<int>("IdInstitucion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contacto");

                    b.Property<string>("Direccion");

                    b.Property<string>("Nombre");

                    b.Property<string>("Telefono");

                    b.HasKey("IdInstitucion");

                    b.ToTable("CI_Institucion");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Indicios.TipoIndicio", b =>
                {
                    b.Property<int>("IdTipoIndicio")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("IdTipoIndicio");

                    b.ToTable("CI_Tipo");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_INEGI.Discapacidad", b =>
                {
                    b.Property<int>("IdDiscapacidad")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("IdDiscapacidad");

                    b.ToTable("C_DISCAPACIDAD");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_INEGI.Estado", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abreviacion");

                    b.Property<string>("Nombre");

                    b.HasKey("IdEstado");

                    b.ToTable("C_ESTADO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_INEGI.Lengua", b =>
                {
                    b.Property<int>("IdLengua")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Clave");

                    b.Property<string>("Nombre");

                    b.HasKey("IdLengua");

                    b.ToTable("C_LENGUA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_INEGI.Localidad", b =>
                {
                    b.Property<int>("IdLocalidad")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CP");

                    b.Property<int>("MunicipioId");

                    b.Property<string>("Nombre");

                    b.Property<string>("Zona");

                    b.HasKey("IdLocalidad");

                    b.HasIndex("MunicipioId");

                    b.ToTable("C_LOCALIDAD");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_INEGI.Municipio", b =>
                {
                    b.Property<int>("IdMunicipio")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EstadoId");

                    b.Property<string>("Nombre");

                    b.Property<int>("Numero_Mpio");

                    b.HasKey("IdMunicipio");

                    b.HasIndex("EstadoId");

                    b.ToTable("C_MUNICIPIO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_INEGI.Nacionalidad", b =>
                {
                    b.Property<int>("IdNacionalidad")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave");

                    b.Property<string>("Nombre");

                    b.HasKey("IdNacionalidad");

                    b.ToTable("C_NACIONALIDAD");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_INEGI.Ocupacion", b =>
                {
                    b.Property<int>("IdOcupacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("IdOcupacion");

                    b.ToTable("C_OCUPACION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_INEGI.Religion", b =>
                {
                    b.Property<int>("IdReligion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("IdReligion");

                    b.ToTable("C_RELIGION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_RasgosFaciales.Cantidad_de_cabello", b =>
                {
                    b.Property<int>("IdCantidadCabello")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdCantidadCabello");

                    b.ToTable("C_CANTIDAD_DE_CABELLO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_RasgosFaciales.Cejas", b =>
                {
                    b.Property<int>("IdTipoCejas")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdTipoCejas");

                    b.ToTable("C_TIPO_DE_CEJAS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_RasgosFaciales.Color_de_Cabello", b =>
                {
                    b.Property<int>("IdColorCabello")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdColorCabello");

                    b.ToTable("C_COLOR_DE_CABELLO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_RasgosFaciales.Color_Ojos", b =>
                {
                    b.Property<int>("IdColorOjos")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdColorOjos");

                    b.ToTable("C_ COLOR_OJOS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_RasgosFaciales.Complexion", b =>
                {
                    b.Property<int>("IdComplexion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdComplexion");

                    b.ToTable("C_COMPLEXION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_RasgosFaciales.Forma_de_cabello", b =>
                {
                    b.Property<int>("IdFormaCabello")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdFormaCabello");

                    b.ToTable("C_FORMA_DE_CABELLO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_RasgosFaciales.Forma_de_Cara", b =>
                {
                    b.Property<int>("IdFormaCara")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdFormaCara");

                    b.ToTable("C_FORMA_DE_CARA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_RasgosFaciales.Forma_de_Menton", b =>
                {
                    b.Property<int>("IdFormaMenton")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdFormaMenton");

                    b.ToTable("C_FORMA_DE_MENTON");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_RasgosFaciales.Grosor_de_labios", b =>
                {
                    b.Property<int>("IdGrosorLabios")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdGrosorLabios");

                    b.ToTable("C_GROSOR_DE_LABIOS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_RasgosFaciales.Largo_de_Cabello", b =>
                {
                    b.Property<int>("IdLargoCabello")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdLargoCabello");

                    b.ToTable("C_LARGO_DE_CABELLO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_RasgosFaciales.Tamaño_de_Boca", b =>
                {
                    b.Property<int>("IdTamañoBoca")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdTamañoBoca");

                    b.ToTable("C_TAMAÑO_DE_BOCA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_RasgosFaciales.Tamaño_Nariz", b =>
                {
                    b.Property<int>("IdTamañoNariz")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdTamañoNariz");

                    b.ToTable("C_TAMAÑO_NARIZ");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_RasgosFaciales.Tez", b =>
                {
                    b.Property<int>("IdTez")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdTez");

                    b.ToTable("C_TEZ");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_RasgosFaciales.Tipo_de_Cejas", b =>
                {
                    b.Property<int>("IdFormaCejas")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdFormaCejas");

                    b.ToTable("C_FORMA_DE_CEJAS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_RasgosFaciales.Tipo_de_Frente", b =>
                {
                    b.Property<int>("IdTipoFrente")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdTipoFrente");

                    b.ToTable("C_TIPO_DE_FRENTE");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_RasgosFaciales.Tipo_de_Orejas", b =>
                {
                    b.Property<int>("IdTipoOrejas")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdTipoOrejas");

                    b.ToTable("C_TIPO_DE_OREJAS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_RasgosFaciales.TipoNariz", b =>
                {
                    b.Property<int>("IdTipoNariz")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdTipoNariz");

                    b.ToTable("C_TIPO_DE_NARIZ");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_RasgosFaciales.TipoOjos", b =>
                {
                    b.Property<int>("IdTipoOjos")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdTipoOjos");

                    b.ToTable("C_TIPO_OJOS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_ServiciosPericiales.ASP", b =>
                {
                    b.Property<int>("IdASP")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgenciaId");

                    b.Property<int>("ServicioPericialId");

                    b.HasKey("IdASP");

                    b.HasIndex("AgenciaId");

                    b.HasIndex("ServicioPericialId");

                    b.ToTable("SP_ASP");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_ServiciosPericiales.ServicioPericial", b =>
                {
                    b.Property<int>("IdServicioPericial")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AtencionVictimas");

                    b.Property<bool>("CancelableporJR");

                    b.Property<string>("Codigo");

                    b.Property<string>("Descripcion");

                    b.Property<string>("EnMateriaDe");

                    b.Property<string>("Requisitos");

                    b.Property<string>("Servicio");

                    b.HasKey("IdServicioPericial");

                    b.ToTable("SP_SERVICIOSPERICIALES");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_StatusNUC.StatusNUC", b =>
                {
                    b.Property<int>("IdStatusNuc")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreStatus");

                    b.HasKey("IdStatusNuc");

                    b.ToTable("C_STATUSNUC");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_TRepresentantes.TiposRepresentantes", b =>
                {
                    b.Property<int>("IdTipoRepresentantes")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tipo");

                    b.HasKey("IdTipoRepresentantes");

                    b.ToTable("C_TIPOSREPRESENTANTES");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Vehiculos.Ano", b =>
                {
                    b.Property<int>("IdAno")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdAno");

                    b.ToTable("CV_ANO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Vehiculos.Color", b =>
                {
                    b.Property<int>("IdColor")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdColor");

                    b.ToTable("CV_COLOR");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Vehiculos.Marca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdMarca");

                    b.ToTable("CV_MARCA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Vehiculos.Modelo", b =>
                {
                    b.Property<int>("IdModelo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.Property<int>("MarcaId");

                    b.HasKey("IdModelo");

                    b.HasIndex("MarcaId");

                    b.ToTable("CV_MODELO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Vehiculos.Tipov", b =>
                {
                    b.Property<int>("IdTipov")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dato");

                    b.HasKey("IdTipov");

                    b.ToTable("CV_TIPOV");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_ControlAcceso.PanelUsuarios.PanelUsuario", b =>
                {
                    b.Property<int>("IdPanelUsuario")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PanelControlId");

                    b.Property<int>("UsuarioId");

                    b.HasKey("IdPanelUsuario");

                    b.HasIndex("PanelControlId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("CA_PANELUSUARIO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_ControlAcceso.Roles.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Condicion");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre");

                    b.HasKey("IdRol");

                    b.ToTable("CA_ROL");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_ControlAcceso.UAlmacenamiento.Almacenamiento", b =>
                {
                    b.Property<int>("IdAlmacenamiento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("EspacioDsiponible");

                    b.Property<decimal>("EspacioTotal");

                    b.Property<decimal>("EspacioUtilizado");

                    b.Property<decimal>("Porcentaje");

                    b.Property<bool>("StatusActivo");

                    b.Property<bool>("StatusLLeno");

                    b.HasKey("IdAlmacenamiento");

                    b.ToTable("CA_ALMACENAMIENTO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_ControlAcceso.Usuarios.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ModuloServicioId");

                    b.Property<int>("RolId");

                    b.Property<Guid>("clave");

                    b.Property<bool>("condicion");

                    b.Property<string>("direccion");

                    b.Property<string>("email");

                    b.Property<string>("nombre");

                    b.Property<byte[]>("password_hash");

                    b.Property<byte[]>("password_salt");

                    b.Property<string>("puesto");

                    b.Property<string>("telefono");

                    b.Property<string>("usuario");

                    b.HasKey("IdUsuario");

                    b.HasIndex("ModuloServicioId");

                    b.HasIndex("RolId");

                    b.ToTable("CA_USUARIO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.EjemploGuid.EjemploG", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("JR_EJEMPLO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RAcuerdoReparatorio.AcuerdoReparatorio", b =>
                {
                    b.Property<int>("IdAcuerdoReparatorio")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Delitos");

                    b.Property<int>("EnvioId");

                    b.Property<DateTime?>("FechaCelebracionAcuerdo")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("FechaHoraRespuestaCoordinadorJuridico")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("FechaLimiteCumplimiento")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("FechaRespuestaAMP")
                        .HasColumnType("DateTime");

                    b.Property<string>("MetodoUtilizado");

                    b.Property<decimal>("MontoTotal");

                    b.Property<string>("NUC");

                    b.Property<string>("NoExpediente");

                    b.Property<int>("NoTotalParcialidades");

                    b.Property<string>("NombreRequerdio");

                    b.Property<string>("NombreSolicitante");

                    b.Property<string>("ObjectoEspecie");

                    b.Property<int>("Periodo");

                    b.Property<string>("RespuestaAMP");

                    b.Property<string>("RespuestaCoordinadorJuridico");

                    b.Property<string>("StatusConclusion");

                    b.Property<string>("StatusCumplimiento");

                    b.Property<string>("StatusRespuestaAMP");

                    b.Property<string>("StatusRespuestaCoordinadorJuridico");

                    b.Property<string>("TextoAR");

                    b.Property<string>("TipoPago");

                    b.Property<string>("uf_Agencia");

                    b.Property<string>("uf_DirSubProc");

                    b.Property<string>("uf_Distrito");

                    b.Property<string>("uf_Modulo");

                    b.Property<string>("uf_Nombre");

                    b.Property<string>("uf_Puesto");

                    b.HasKey("IdAcuerdoReparatorio");

                    b.HasIndex("EnvioId");

                    b.ToTable("JR_ACUERDOREPARATORIO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RAsignacionEnvios.AsignacionEnvio", b =>
                {
                    b.Property<int>("IdAsingacionEnvio")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EnvioId");

                    b.Property<int>("ModuloServicioId");

                    b.HasKey("IdAsingacionEnvio");

                    b.HasIndex("EnvioId");

                    b.HasIndex("ModuloServicioId");

                    b.ToTable("JR_ASINGACIONENVIO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RCitatorioRecordatorio.CitatorioRecordatorio", b =>
                {
                    b.Property<int>("IdCitatorioRecordatorio")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContadorSMS");

                    b.Property<int>("Duracion");

                    b.Property<DateTime>("FechaHoraCita")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("FechaSys")
                        .HasColumnType("DateTime");

                    b.Property<string>("LugarCita");

                    b.Property<int>("NoCitatorio");

                    b.Property<string>("NoExpediente");

                    b.Property<int>("SesionId");

                    b.Property<bool>("StatusAsistencia");

                    b.Property<string>("StatusEntrega");

                    b.Property<string>("Textooficio");

                    b.Property<string>("dirigidoa_Direccion");

                    b.Property<string>("dirigidoa_Nombre");

                    b.Property<string>("dirigidoa_Telefono");

                    b.Property<string>("solicitadoPor");

                    b.Property<string>("solicitadoPor_Telefono");

                    b.Property<string>("uf_Agencia");

                    b.Property<string>("uf_DirSubProc");

                    b.Property<string>("uf_Distrito");

                    b.Property<string>("uf_Modulo");

                    b.Property<string>("uf_Nombre");

                    b.Property<string>("uf_Puesto");

                    b.HasKey("IdCitatorioRecordatorio");

                    b.HasIndex("SesionId");

                    b.ToTable("JR_CITATORIORECORDATORIO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RDelitodelitosDerivados.DelitoDerivado", b =>
                {
                    b.Property<int>("IdDelitoDerivado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EnvioId");

                    b.Property<int>("RDHId");

                    b.HasKey("IdDelitoDerivado");

                    b.HasIndex("EnvioId");

                    b.HasIndex("RDHId");

                    b.ToTable("JR_DELITODERIVADO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.REnvio.Envio", b =>
                {
                    b.Property<int>("IdEnvio")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AutoridadqueDeriva");

                    b.Property<int>("ContadorNODerivacion");

                    b.Property<string>("EspontaneoNoEspontaneo");

                    b.Property<int>("ExpedienteId");

                    b.Property<DateTime?>("FechaCierre")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("DateTime");

                    b.Property<string>("MotivoBaja");

                    b.Property<int>("NoSolicitantes");

                    b.Property<string>("PrimeraVezSubsecuente");

                    b.Property<string>("RespuestaExpediente");

                    b.Property<bool>("StatusBaja");

                    b.Property<string>("StatusGeneral");

                    b.Property<string>("uqe_Agencia");

                    b.Property<string>("uqe_DirSubProc");

                    b.Property<string>("uqe_Distrito");

                    b.Property<string>("uqe_Modulo");

                    b.Property<string>("uqe_Nombre");

                    b.Property<string>("uqe_Puesto");

                    b.HasKey("IdEnvio");

                    b.HasIndex("ExpedienteId");

                    b.ToTable("JR_ENVIO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RExpediente.Expediente", b =>
                {
                    b.Property<int>("IdExpediente")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Año");

                    b.Property<int>("Cosecutivo");

                    b.Property<DateTime>("FechaRegistroExpediente")
                        .HasColumnType("DateTime");

                    b.Property<string>("InformacionStatus");

                    b.Property<int>("NoDerivacion");

                    b.Property<string>("NoExpediente");

                    b.Property<string>("Prefijo");

                    b.Property<int>("RHechoId");

                    b.Property<string>("Sede");

                    b.Property<string>("StatusGeneral");

                    b.HasKey("IdExpediente");

                    b.HasIndex("RHechoId");

                    b.ToTable("JR_EXPEDIENTE");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RFacilitadorNotificador.FacilitadorNotificador", b =>
                {
                    b.Property<int>("IdFacilitadorNotificador")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ModuloServicioId");

                    b.Property<bool>("StatusActivo");

                    b.Property<bool>("StatusAsignado");

                    b.HasKey("IdFacilitadorNotificador");

                    b.HasIndex("ModuloServicioId");

                    b.ToTable("JR_FACILITADORNOTIFICADOR");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RNotificacion.RegistroNotificacion", b =>
                {
                    b.Property<int>("IdRegistroNotificaciones")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Asunto");

                    b.Property<int>("ExpedienteId");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("DateTime");

                    b.Property<string>("Reuqeridos");

                    b.Property<string>("Solicitates");

                    b.Property<string>("Texto");

                    b.Property<string>("uf_Agencia");

                    b.Property<string>("uf_DirSubProc");

                    b.Property<string>("uf_Distrito");

                    b.Property<string>("uf_Modulo");

                    b.Property<string>("uf_Nombre");

                    b.Property<string>("uf_Puesto");

                    b.HasKey("IdRegistroNotificaciones");

                    b.HasIndex("ExpedienteId");

                    b.ToTable("JR_REGISTRONOTIFICACION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RRegistro.RegistroConclusion", b =>
                {
                    b.Property<int>("IdRegistroConclusion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Asunto");

                    b.Property<int>("ExpedienteId");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("DateTime");

                    b.Property<string>("Reuqeridos");

                    b.Property<string>("Solicitates");

                    b.Property<string>("StatusGeneral");

                    b.Property<string>("Texto");

                    b.Property<string>("uf_Agencia");

                    b.Property<string>("uf_DirSubProc");

                    b.Property<string>("uf_Distrito");

                    b.Property<string>("uf_Modulo");

                    b.Property<string>("uf_Nombre");

                    b.Property<string>("uf_Puesto");

                    b.HasKey("IdRegistroConclusion");

                    b.HasIndex("ExpedienteId");

                    b.ToTable("JR_REGISTROCONCLUSION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RSeguimientoCumplimiento.SeguimientoCumplimiento", b =>
                {
                    b.Property<int>("IdSeguimientoCumplimiento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcuerdoReparatorioId");

                    b.Property<decimal>("CantidadAPagar");

                    b.Property<string>("Direccion");

                    b.Property<string>("Dirigidoa");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("FechaHoraCita");

                    b.Property<DateTime?>("FechaProrroga");

                    b.Property<int>("NoParcialidad");

                    b.Property<string>("Requeridos");

                    b.Property<string>("Solicitantes");

                    b.Property<string>("StatusPago");

                    b.Property<string>("Texto");

                    b.Property<string>("Titulo");

                    b.Property<string>("uf_Agencia");

                    b.Property<string>("uf_DirSubProc");

                    b.Property<string>("uf_Distrito");

                    b.Property<string>("uf_Modulo");

                    b.Property<string>("uf_Nombre");

                    b.Property<string>("uf_Puesto");

                    b.HasKey("IdSeguimientoCumplimiento");

                    b.HasIndex("AcuerdoReparatorioId");

                    b.ToTable("JR_SEGUIMIENTOCUMPLIMIENTO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RSesion.Sesion", b =>
                {
                    b.Property<int>("IdSesion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Asunto");

                    b.Property<string>("DescripcionSesion");

                    b.Property<int>("EnvioId");

                    b.Property<DateTime>("FechaHora");

                    b.Property<DateTime?>("FechaHoraSys")
                        .HasColumnType("DateTime");

                    b.Property<int>("ModuloServicioId");

                    b.Property<int>("NoSesion");

                    b.Property<string>("Reuqeridos");

                    b.Property<string>("Solicitates");

                    b.Property<string>("StatusSesion");

                    b.Property<string>("uf_Agencia");

                    b.Property<string>("uf_DirSubProc");

                    b.Property<string>("uf_Distrito");

                    b.Property<string>("uf_Modulo");

                    b.Property<string>("uf_Nombre");

                    b.Property<string>("uf_Puesto");

                    b.HasKey("IdSesion");

                    b.HasIndex("EnvioId");

                    b.HasIndex("ModuloServicioId");

                    b.ToTable("JR_SESION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RSolicitanteRequerido.SolicitanteRequerido", b =>
                {
                    b.Property<int>("IdRSolicitanteRequerido")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clasificacion");

                    b.Property<int>("EnvioId");

                    b.Property<int>("PersonaId");

                    b.Property<string>("Tipo");

                    b.HasKey("IdRSolicitanteRequerido");

                    b.HasIndex("EnvioId");

                    b.HasIndex("PersonaId");

                    b.ToTable("JR_SOLICITANTEREQUERIDO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Panel.M_PanelControl.PanelControl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abrev")
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("Clave");

                    b.Property<string>("Icono")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(800)");

                    b.Property<string>("Ruta")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("PC_PANELCONTROL");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.ArchivosColaboraciones.ArchivosComparecencia", b =>
                {
                    b.Property<int>("IdrchivosComparecencia")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionDocumento");

                    b.Property<DateTime>("Fechasys");

                    b.Property<int>("PresentacionesYCId");

                    b.Property<string>("Puesto");

                    b.Property<string>("Ruta");

                    b.Property<string>("TipoDocumento");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdrchivosComparecencia");

                    b.HasIndex("PresentacionesYCId");

                    b.ToTable("PI_ARCHIVOSCOMPARECENCIA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.ArchivosColaboraciones.ArchivosOAprension", b =>
                {
                    b.Property<int>("IdArchivosOAprension")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionDocumento");

                    b.Property<DateTime>("Fechasys");

                    b.Property<int>("OrdenAprensionId");

                    b.Property<string>("Puesto");

                    b.Property<string>("Ruta");

                    b.Property<string>("TipoDocumento");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdArchivosOAprension");

                    b.HasIndex("OrdenAprensionId");

                    b.ToTable("PI_ARCHIVOSOAPRENSION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.CFotos.Fotos", b =>
                {
                    b.Property<int>("IdFotos")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionDocumento");

                    b.Property<string>("FechaRegistro");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("Puesto");

                    b.Property<int>("RActoInvestigacionId");

                    b.Property<string>("Ruta");

                    b.Property<string>("TipoDocumento");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdFotos");

                    b.HasIndex("RActoInvestigacionId");

                    b.ToTable("PI_FOTOS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.CMedicosPR.CMedicoPR", b =>
                {
                    b.Property<int>("IdCMedicoPR")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaAsignacion");

                    b.Property<DateTime>("FechaUltimoStatus");

                    b.Property<DateTime>("Fechasys");

                    b.Property<int>("ModuloServicioId");

                    b.Property<string>("NOficio");

                    b.Property<string>("NodeSolicitud");

                    b.Property<string>("Nuc");

                    b.Property<string>("NumeroAgencia");

                    b.Property<string>("NumeroControl");

                    b.Property<string>("NumeroDistrito");

                    b.Property<int>("PersonaId");

                    b.Property<string>("Respuesta");

                    b.Property<string>("Status");

                    b.Property<string>("TelefonoAgencia");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdCMedicoPR");

                    b.HasIndex("ModuloServicioId");

                    b.HasIndex("PersonaId");

                    b.ToTable("PI_CMEDICOPR");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.CMedicosPSR.CMedicoPSR", b =>
                {
                    b.Property<int>("IdCMedicoPSR")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoM");

                    b.Property<string>("ApellidoP");

                    b.Property<DateTime>("FechaAsignacion");

                    b.Property<DateTime>("FechaUltimoStatus");

                    b.Property<DateTime>("Fechasys");

                    b.Property<int>("ModuloServicioId");

                    b.Property<string>("NodeSolicitud");

                    b.Property<string>("Nombre");

                    b.Property<string>("NumUnicoRegistro");

                    b.Property<string>("NumeroAgencia");

                    b.Property<string>("NumeroControl");

                    b.Property<string>("NumeroDistrito");

                    b.Property<string>("Respuesta");

                    b.Property<string>("Status");

                    b.Property<string>("TelefonoAgencia");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdCMedicoPSR");

                    b.HasIndex("ModuloServicioId");

                    b.ToTable("PI_CMEDICOPSR");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.Detenciones.Detencion", b =>
                {
                    b.Property<int>("IdDetencion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AutoridadED");

                    b.Property<string>("AutoridadQO");

                    b.Property<string>("Delito");

                    b.Property<DateTime>("FechaHReingreso");

                    b.Property<string>("FechaIngreso");

                    b.Property<string>("FechaSalida");

                    b.Property<string>("FechaTraslado");

                    b.Property<DateTime>("FechaUltimoStatus");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("MOperandi");

                    b.Property<string>("Mesa");

                    b.Property<string>("Modalidad");

                    b.Property<string>("MpAsignado");

                    b.Property<string>("Nuc");

                    b.Property<string>("NumUnicoRegNacional");

                    b.Property<int>("PersonaId");

                    b.Property<string>("Pertenecnias");

                    b.Property<int>("RHechoId");

                    b.Property<string>("Status");

                    b.Property<string>("Tdelito");

                    b.Property<string>("TipoDetencion");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdDetencion");

                    b.HasIndex("PersonaId");

                    b.HasIndex("RHechoId");

                    b.ToTable("PI_DETENCION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.Detenciones.HistorialDetencion", b =>
                {
                    b.Property<int>("IdHistorialDetencion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DetencionId");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("StatusPasado");

                    b.Property<string>("StatuusNuevo");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdHistorialDetencion");

                    b.HasIndex("DetencionId");

                    b.ToTable("PI_HISTORIALDETENCIONES");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.Direcciones.Direccion", b =>
                {
                    b.Property<int>("IdDireccion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calle");

                    b.Property<int>("Cp");

                    b.Property<string>("Ecalle1");

                    b.Property<string>("Ecalle2");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("Latitud");

                    b.Property<string>("Localidad");

                    b.Property<string>("Longitud");

                    b.Property<string>("Municipio");

                    b.Property<int>("NoExterior");

                    b.Property<int>("NoInterior");

                    b.Property<int>("PIPersonaVisitaId");

                    b.Property<string>("Pais");

                    b.Property<string>("Referencia");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdDireccion");

                    b.HasIndex("PIPersonaVisitaId");

                    b.ToTable("PI_DIRECCION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.EgresosTemporales.EgresoTemporal", b =>
                {
                    b.Property<int>("IdEgresoTemporal")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DetencionId");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("Horaegreso");

                    b.Property<string>("Motivo");

                    b.Property<string>("Notas");

                    b.Property<string>("QuienAutoriza");

                    b.Property<string>("QuienSolicita");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdEgresoTemporal");

                    b.HasIndex("DetencionId");

                    b.ToTable("PI_EGRESO_TEMPORALES");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.EstatusCustodias.EstatusCustodia", b =>
                {
                    b.Property<int>("IdEstatusCustodia")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calle");

                    b.Property<int>("Cp");

                    b.Property<string>("Destino");

                    b.Property<int>("DetencionId");

                    b.Property<string>("Ecalle1");

                    b.Property<string>("Ecalle2");

                    b.Property<string>("ElementoAsignado");

                    b.Property<string>("Estado");

                    b.Property<string>("FechaInicio");

                    b.Property<string>("FechaTermino");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("HoraLLegada");

                    b.Property<string>("HoraSalida");

                    b.Property<string>("HoraTermino");

                    b.Property<string>("Horainicio");

                    b.Property<string>("Latitud");

                    b.Property<string>("Localidad");

                    b.Property<string>("Longitud");

                    b.Property<string>("Motivo");

                    b.Property<string>("Municipio");

                    b.Property<int>("NoExterior");

                    b.Property<int>("NoInterior");

                    b.Property<string>("Observaciones");

                    b.Property<string>("Origen");

                    b.Property<string>("Pais");

                    b.Property<string>("Referencia");

                    b.Property<string>("Ruta");

                    b.Property<bool>("Tipo");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdEstatusCustodia");

                    b.HasIndex("DetencionId");

                    b.ToTable("PI_ESTATUS_CUSTODIA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.FPersonas.FPersona", b =>
                {
                    b.Property<int>("IdFPersona")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionDocumento");

                    b.Property<string>("FechaRegistro");

                    b.Property<DateTime>("Fechasys");

                    b.Property<int>("PIPersonaVisitaId");

                    b.Property<string>("Puesto");

                    b.Property<string>("Ruta");

                    b.Property<string>("TipoDocumento");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdFPersona");

                    b.HasIndex("PIPersonaVisitaId");

                    b.ToTable("PI_FPERSONAS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.InformacionJuridico.Arresto", b =>
                {
                    b.Property<int>("IdArresto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CausaPenal");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FAsignacion");

                    b.Property<DateTime>("FFinalizacion");

                    b.Property<DateTime>("FUltmimoStatus");

                    b.Property<DateTime>("FechaCumplimiento");

                    b.Property<string>("FechaRecepcion");

                    b.Property<string>("FechaRecibido");

                    b.Property<DateTime>("FechasComparescencia");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("GpoAsignado");

                    b.Property<string>("JuezSolicita");

                    b.Property<int>("ModuloServicioId");

                    b.Property<string>("NomArrestado");

                    b.Property<string>("Notas");

                    b.Property<string>("Oficio");

                    b.Property<string>("Respuesta");

                    b.Property<string>("Status");

                    b.Property<string>("TiempoH");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdArresto");

                    b.HasIndex("ModuloServicioId");

                    b.ToTable("PI_IJ_ARRESTO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.InformacionJuridico.BusquedaDomicilio", b =>
                {
                    b.Property<int>("IdBusquedaDomicilio")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CausaPenal");

                    b.Property<string>("Concepto");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FAsignacion");

                    b.Property<DateTime>("FFinalizacion");

                    b.Property<DateTime>("FUltmimoStatus");

                    b.Property<DateTime>("FechaCumplimiento");

                    b.Property<string>("FechaRecepcion");

                    b.Property<DateTime>("FechasComparescencia");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("Juzgado");

                    b.Property<int>("ModuloServicioId");

                    b.Property<string>("Oficio");

                    b.Property<string>("Recepcion");

                    b.Property<string>("Respuesta");

                    b.Property<string>("Status");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdBusquedaDomicilio");

                    b.HasIndex("ModuloServicioId");

                    b.ToTable("PI_IJ_BUSQUEDA_DOMICILIO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.InformacionJuridico.ComparecenciasElementos", b =>
                {
                    b.Property<int>("IdCompElementos")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnteAutoridad");

                    b.Property<string>("CausaPenal");

                    b.Property<string>("Comparecencia");

                    b.Property<string>("Elemento");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FAsignacion");

                    b.Property<string>("FComparecencia");

                    b.Property<DateTime>("FFinalizacion");

                    b.Property<DateTime>("FUltmimoStatus");

                    b.Property<DateTime>("FechaCumplimiento");

                    b.Property<string>("FechaRecepcion");

                    b.Property<DateTime>("FechasComparescencia");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("Hora");

                    b.Property<int>("ModuloServicioId");

                    b.Property<int>("Noficio");

                    b.Property<string>("Notas");

                    b.Property<string>("Recibe");

                    b.Property<string>("Respuesta");

                    b.Property<string>("Status");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdCompElementos");

                    b.HasIndex("ModuloServicioId");

                    b.ToTable("PI_IJ_COMPARECENCIA_ELEMENTOS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.InformacionJuridico.Exhorto", b =>
                {
                    b.Property<int>("IdExhorto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActosRealizar");

                    b.Property<string>("Agraviado");

                    b.Property<string>("Asignado");

                    b.Property<string>("CausaPenal");

                    b.Property<string>("Delito");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FAsignacion");

                    b.Property<DateTime>("FFinalizacion");

                    b.Property<DateTime>("FUltmimoStatus");

                    b.Property<DateTime>("FechaCumplimiento");

                    b.Property<string>("FechaRecepcion");

                    b.Property<DateTime>("FechasComparescencia");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("Juzgado");

                    b.Property<int>("ModuloServicioId");

                    b.Property<string>("Oficio");

                    b.Property<string>("PerAPresentar");

                    b.Property<string>("Recepcion");

                    b.Property<string>("Respuesta");

                    b.Property<string>("Status");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdExhorto");

                    b.HasIndex("ModuloServicioId");

                    b.ToTable("PI_IJ_EXHORTO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.InformacionJuridico.OrdenAprension", b =>
                {
                    b.Property<int>("IdOrdenAprension")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ARC");

                    b.Property<string>("Agraviado");

                    b.Property<string>("CausaPenal");

                    b.Property<string>("Delito");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FAsignacion");

                    b.Property<DateTime>("FFinalizacion");

                    b.Property<DateTime>("FUltmimoStatus");

                    b.Property<DateTime>("FechaCumplimiento");

                    b.Property<string>("FechaRecepcion");

                    b.Property<DateTime>("FechasComparescencia");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("Imputado");

                    b.Property<string>("Juzgado");

                    b.Property<int>("ModuloServicioId");

                    b.Property<string>("Observaciones");

                    b.Property<string>("OficialiaDPartes");

                    b.Property<string>("Oficio");

                    b.Property<string>("Recibida");

                    b.Property<string>("Respuesta");

                    b.Property<string>("Status");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdOrdenAprension");

                    b.HasIndex("ModuloServicioId");

                    b.ToTable("PI_IJ_ORDEN_APRENSION");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.InformacionJuridico.PresentacionesYC", b =>
                {
                    b.Property<int>("IdPresentacionesYC")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Asignado");

                    b.Property<string>("CausaPenal");

                    b.Property<string>("CumplidaOInf");

                    b.Property<string>("Dependencia");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FAsignacion");

                    b.Property<DateTime>("FFinalizacion");

                    b.Property<DateTime>("FUltmimoStatus");

                    b.Property<string>("FdePresentacion");

                    b.Property<DateTime>("FechaCumplimiento");

                    b.Property<string>("FechaRecepcion");

                    b.Property<DateTime>("FechasComparescencia");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("Hora");

                    b.Property<int>("ModuloServicioId");

                    b.Property<string>("Oficio");

                    b.Property<string>("PerAPresentar");

                    b.Property<string>("Recepcion");

                    b.Property<string>("Respuesta");

                    b.Property<string>("Status");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdPresentacionesYC");

                    b.HasIndex("ModuloServicioId");

                    b.ToTable("PI_IJ_PRESENTACIONES_Y_C");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.InformacionJuridico.RequerimientosVarios", b =>
                {
                    b.Property<int>("IdReqVarios")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Asignado");

                    b.Property<string>("CausaPenal");

                    b.Property<string>("Consepto");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Dia");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FAsignacion");

                    b.Property<DateTime>("FFinalizacion");

                    b.Property<DateTime>("FUltmimoStatus");

                    b.Property<DateTime>("FechaCumplimiento");

                    b.Property<string>("FechaRecepcion");

                    b.Property<DateTime>("FechasComparescencia");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("Hora");

                    b.Property<string>("Juzgado");

                    b.Property<int>("ModuloServicioId");

                    b.Property<string>("Oficio");

                    b.Property<string>("Recepcion");

                    b.Property<string>("Respuesta");

                    b.Property<string>("Status");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdReqVarios");

                    b.HasIndex("ModuloServicioId");

                    b.ToTable("PI_IJ_REQUERIMIENTOS_VARIOS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.InformacionJuridico.TrasladosYCustodias", b =>
                {
                    b.Property<int>("IdTrasladosYC")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Asignado");

                    b.Property<string>("CausaPenal");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FAsignacion");

                    b.Property<DateTime>("FFinalizacion");

                    b.Property<DateTime>("FUltmimoStatus");

                    b.Property<string>("Fecha");

                    b.Property<DateTime>("FechaCumplimiento");

                    b.Property<string>("FechaRecepcion");

                    b.Property<DateTime>("FechasComparescencia");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("Hora");

                    b.Property<string>("Juzgado");

                    b.Property<string>("Lugar");

                    b.Property<int>("ModuloServicioId");

                    b.Property<string>("Oficio");

                    b.Property<string>("PersonaaTras");

                    b.Property<string>("Recepcion");

                    b.Property<string>("Respuesta");

                    b.Property<string>("Status");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdTrasladosYC");

                    b.HasIndex("ModuloServicioId");

                    b.ToTable("PI_IJ_TRASLADOSYCUSTODIAS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.Informes.Informe", b =>
                {
                    b.Property<int>("IdInforme")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fecha");

                    b.Property<DateTime>("FechaSys");

                    b.Property<string>("NoOficio");

                    b.Property<int>("PeritoAsignadoPIId");

                    b.Property<string>("TextoInforme");

                    b.Property<int>("TipoInforme");

                    b.Property<string>("uAgencia");

                    b.Property<string>("uDistrito");

                    b.Property<string>("uModulo");

                    b.Property<string>("uPuesto");

                    b.Property<string>("uSubproc");

                    b.Property<string>("uUsuario");

                    b.HasKey("IdInforme");

                    b.HasIndex("PeritoAsignadoPIId");

                    b.ToTable("PI_INFORMES");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.OAprhensionBitacoras.OAprhensionBitacora", b =>
                {
                    b.Property<int>("IdOAprhensionBitacora")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaSys");

                    b.Property<int>("OrdenAprensionId");

                    b.Property<string>("Texto");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdOAprhensionBitacora");

                    b.HasIndex("OrdenAprensionId");

                    b.ToTable("OAprhensionBitacoras");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.PeritosAsignadosPI.PeritoAsignadoPI", b =>
                {
                    b.Property<int>("IdPeritoAsignadoPI")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Conclusion");

                    b.Property<string>("FechaAceptado");

                    b.Property<DateTime>("FechaCambio");

                    b.Property<string>("FechaEntregado");

                    b.Property<string>("FechaFinalizado");

                    b.Property<string>("FechaRecibido");

                    b.Property<DateTime>("Fechasysfinalizado");

                    b.Property<DateTime>("Fechasysregistro");

                    b.Property<int>("ModuloServicioId");

                    b.Property<string>("Motivo");

                    b.Property<int>("NumeroInterno");

                    b.Property<int>("RActoInvestigacionId");

                    b.Property<string>("Respuesta");

                    b.Property<DateTime>("UltmimoStatus");

                    b.Property<string>("uAgencia");

                    b.Property<string>("uDistrito");

                    b.Property<string>("uModulo");

                    b.Property<string>("uPuesto");

                    b.Property<string>("uSubproc");

                    b.Property<string>("uUsuario");

                    b.HasKey("IdPeritoAsignadoPI");

                    b.HasIndex("ModuloServicioId");

                    b.HasIndex("RActoInvestigacionId");

                    b.ToTable("PI_PERITOSASIGNADOS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.PersonasVisita.PIPersonaVisita", b =>
                {
                    b.Property<int>("IdPIPersonaVisita")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoM");

                    b.Property<string>("ApellidoP");

                    b.Property<int>("Edad");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("Nombre");

                    b.Property<string>("Ocupacion");

                    b.Property<int>("Telefono1");

                    b.Property<int>("Telefono2");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdPIPersonaVisita");

                    b.ToTable("PI_PERSONAVISITA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.SolicitudesInteligencia.SolicitudInteligencia", b =>
                {
                    b.Property<int>("IdSolicitudInteligencia")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fecha");

                    b.Property<DateTime>("FechaSys");

                    b.Property<string>("Mensaje");

                    b.Property<int>("PeritoAsignadoPIId");

                    b.Property<string>("Respuesta");

                    b.Property<bool>("StatusAutorizacion");

                    b.Property<string>("StatusMensaje");

                    b.Property<string>("uAgencia");

                    b.Property<string>("uDistrito");

                    b.Property<string>("uModulo");

                    b.Property<string>("uPuesto");

                    b.Property<string>("uSubproc");

                    b.Property<string>("uUsuario");

                    b.HasKey("IdSolicitudInteligencia");

                    b.HasIndex("PeritoAsignadoPIId");

                    b.ToTable("PI_SOLICITUDINTELIGENCIA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.SolicitudesInteligencia.SolicitudInteligenciaAsig", b =>
                {
                    b.Property<int>("IdSolicitudInteligenciaAsig")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ModuloServicioId");

                    b.Property<int>("SolicitudInteligenciaId");

                    b.HasKey("IdSolicitudInteligenciaAsig");

                    b.HasIndex("ModuloServicioId");

                    b.HasIndex("SolicitudInteligenciaId");

                    b.ToTable("PI_SOLICITUDINTELIGENCIAASIG");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.SubirArchivos.SubirArchivo", b =>
                {
                    b.Property<int>("IdSubirArchivo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionDocumento");

                    b.Property<int>("DetencionId");

                    b.Property<DateTime>("Fecha");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("NombreDocumento");

                    b.Property<string>("Ruta");

                    b.Property<string>("TipoDocumento");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdSubirArchivo");

                    b.HasIndex("DetencionId");

                    b.ToTable("PI_SUBIRARCHIVO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.Visitas.Visita", b =>
                {
                    b.Property<int>("IdVisita")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DetencionId");

                    b.Property<DateTime>("Fechasys");

                    b.Property<string>("FechayHora");

                    b.Property<string>("HILocutorio");

                    b.Property<string>("HSLocutorio");

                    b.Property<string>("MotivoVisita");

                    b.Property<int>("PIPersonaVisitaId");

                    b.Property<string>("QAutorizaVisita");

                    b.Property<string>("RDetenido");

                    b.Property<string>("UAgencia");

                    b.Property<string>("UDistrito");

                    b.Property<string>("UModulo");

                    b.Property<string>("UPuesto");

                    b.Property<string>("USubproc");

                    b.Property<string>("Usuario");

                    b.HasKey("IdVisita");

                    b.HasIndex("DetencionId");

                    b.HasIndex("PIPersonaVisitaId");

                    b.ToTable("PI_VISITA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_SP.DiligenciaIndicios.DiligenciaIndicio", b =>
                {
                    b.Property<int>("IdDiligenciaIndicio")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IndiciosId");

                    b.Property<int>("RDiligenciasId");

                    b.HasKey("IdDiligenciaIndicio");

                    b.HasIndex("IndiciosId");

                    b.HasIndex("RDiligenciasId");

                    b.ToTable("SP_DILIGENCIAINDICIO");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_SP.DocsDiligencias.DocsDiligencia", b =>
                {
                    b.Property<int>("IdDocsDiligencia")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionDocumento");

                    b.Property<string>("FechaRegistro");

                    b.Property<string>("Puesto");

                    b.Property<int>("RDiligenciasId");

                    b.Property<string>("Ruta");

                    b.Property<string>("TipoDocumento");

                    b.Property<string>("Usuario");

                    b.Property<DateTime>("fechasysregistro");

                    b.Property<string>("uAgencia");

                    b.Property<string>("uDistrito");

                    b.Property<string>("uModulo");

                    b.Property<string>("uPuesto");

                    b.Property<string>("uSubproc");

                    b.Property<string>("uUsuario");

                    b.HasKey("IdDocsDiligencia");

                    b.HasIndex("RDiligenciasId");

                    b.ToTable("SP_DOCSDILIGENCIA");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_SP.PeritosAsignados.PeritoAsignado", b =>
                {
                    b.Property<int>("IdPeritoAsignado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Conclusion");

                    b.Property<string>("FechaAceptado");

                    b.Property<string>("FechaEntregado");

                    b.Property<string>("FechaFinalizado");

                    b.Property<string>("FechaRecibido");

                    b.Property<DateTime>("Fechasysfinalizado");

                    b.Property<DateTime>("Fechasysregistro");

                    b.Property<int>("ModuloServicioId");

                    b.Property<string>("NumeroControl");

                    b.Property<int>("NumeroInterno");

                    b.Property<int>("RDiligenciasId");

                    b.Property<string>("Respuesta");

                    b.Property<DateTime>("UltmimoStatus");

                    b.Property<string>("uAgencia");

                    b.Property<string>("uDistrito");

                    b.Property<string>("uModulo");

                    b.Property<string>("uPuesto");

                    b.Property<string>("uSubproc");

                    b.Property<string>("uUsuario");

                    b.HasKey("IdPeritoAsignado");

                    b.HasIndex("ModuloServicioId");

                    b.HasIndex("RDiligenciasId");

                    b.ToTable("SP_PERITOSASIGNADOS");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Ampliacion.AmpDec", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "Hecho")
                        .WithMany()
                        .HasForeignKey("HechoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.Registro.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Arma.RArma", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Bitacora.RBitacora", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Registro.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("rHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.C5i.C5", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.CArchivos.Archivos", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Citatorio_Notificacion.RCitatorio_Notificacion", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Datos_Relacionados.DatosRelacionados", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.DatosProtegidos.DatoProtegido", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Registro.RAP", "RAP")
                        .WithMany()
                        .HasForeignKey("RAPId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.DDerivacion.RDDerivacion", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.DependeciasDerivacion", "DependeciasDerivacion")
                        .WithMany()
                        .HasForeignKey("idDDerivacion")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("rHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Diligencias.RDiligencias", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_ServiciosPericiales.ASP", "ASP")
                        .WithMany()
                        .HasForeignKey("ASPId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("rHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Direcciones.DireccionDelito", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "rHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Direcciones.DireccionEscucha", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Registro.RAP", "RAP")
                        .WithMany()
                        .HasForeignKey("RAPId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Direcciones.DireccionPersonal", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Registro.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.GNUC.Nuc", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.Agencia", "Agencia")
                        .WithMany()
                        .HasForeignKey("AgenciaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.Distrito", "Distrito")
                        .WithMany()
                        .HasForeignKey("DistritoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.GRAC.Rac", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.Agencia", "Agencia")
                        .WithMany()
                        .HasForeignKey("AgenciaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.Distrito", "Distrito")
                        .WithMany()
                        .HasForeignKey("DistritoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.ImpProceso.CondImpProceso", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Registro.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Indicios.DetalleSeguimientoIndicio", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Indicios.Indicios", "Indicios")
                        .WithMany()
                        .HasForeignKey("IndiciosId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Indicios.Indicios", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.MedAfiliacion.ArchivosMediaAfiliacion", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.MedAfiliacion.MediaAfiliacion", "MediaAfiliacion")
                        .WithMany()
                        .HasForeignKey("MediaAfiliacionid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.MedAfiliacion.MediaAfiliacion", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Registro.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.MedCautelares.MedidasCautelares", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Registro.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.MedidasProteccion.Medidasproteccion", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.NoEjerciciosApenal.NoEjercicioApenal", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Oficios.Oficio", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.Agencia", "Agencia")
                        .WithMany()
                        .HasForeignKey("Agenciaid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany()
                        .HasForeignKey("ModuloServicioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.GNUC.Nuc", "NUCs")
                        .WithMany()
                        .HasForeignKey("NucId");

                    b.HasOne("SIIGPP.Entidades.M_Cat.Registro.RAtencion", "RAtencion")
                        .WithMany()
                        .HasForeignKey("RAtencionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.RActosInvestigacion.ActosInDetalle", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.RActosInvestigacion.RActoInvestigacion", "RActosInvestigacion")
                        .WithMany()
                        .HasForeignKey("RActosInvestigacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.RActosInvestigacion.RActoInvestigacion", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.RDHecho.RDH", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Delito.Delito", "Delito")
                        .WithMany()
                        .HasForeignKey("DelitoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Registro.DocumentosPesona", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Registro.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Registro.RAP", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Registro.Persona", "Persona")
                        .WithMany("RAPs")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.Registro.RAtencion", "RAtencion")
                        .WithMany("RAPs")
                        .HasForeignKey("RAtencionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Registro.RAtencion", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.GRAC.Rac", "RACs")
                        .WithMany()
                        .HasForeignKey("racId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Representantes.DocsRepresentantes", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Representantes.Representante", "Representante")
                        .WithMany()
                        .HasForeignKey("RepresentanteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Representantes.Representante", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Registro.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Terminacion.DeterminacionArchivo", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Terminacion.RInconpentencia", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Turnador.AmpoTurno", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany("AmpoTurnos")
                        .HasForeignKey("ModuloServicioId");

                    b.HasOne("SIIGPP.Entidades.M_Cat.Turnador.Turno", "Turno")
                        .WithMany("AmpoTurnos")
                        .HasForeignKey("TurnoId");
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.Turnador.Turno", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.Agencia", "Agencia")
                        .WithMany("Turnos")
                        .HasForeignKey("AgenciaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.Registro.RAtencion", "RAtencion")
                        .WithMany()
                        .HasForeignKey("RAtencionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Cat.VehiculoImplicito.Vehiculo", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Armas.ArmaObjeto", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Armas.ClasificacionArma", "ClasificacionArma")
                        .WithMany()
                        .HasForeignKey("ClasificacionArmaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.Agencia", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estrucutra.DSP", "DSP")
                        .WithMany()
                        .HasForeignKey("DSPId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.DependeciasDerivacion", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.Distrito", "Distrito")
                        .WithMany()
                        .HasForeignKey("DistritoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.Agencia", "Agencia")
                        .WithMany("ModuloServicios")
                        .HasForeignKey("AgenciaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Estrucutra.DSP", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.Distrito", "Distrito")
                        .WithMany()
                        .HasForeignKey("DistritoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_FiscaliaOestados.FiscaliaOestado", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_INEGI.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_INEGI.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_INEGI.Localidad", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_INEGI.Municipio", "municipio")
                        .WithMany("Localidads")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_INEGI.Municipio", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_INEGI.Estado", "estado")
                        .WithMany("Municipios")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_ServiciosPericiales.ASP", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.Agencia", "Agencia")
                        .WithMany()
                        .HasForeignKey("AgenciaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_ServiciosPericiales.ServicioPericial", "ServicioPericial")
                        .WithMany("ASPs")
                        .HasForeignKey("ServicioPericialId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_Configuracion.Cat_Vehiculos.Modelo", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Vehiculos.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_ControlAcceso.PanelUsuarios.PanelUsuario", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Panel.M_PanelControl.PanelControl", "PanelControl")
                        .WithMany()
                        .HasForeignKey("PanelControlId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_ControlAcceso.Usuarios.Usuario", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_ControlAcceso.Usuarios.Usuario", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany("usuarios")
                        .HasForeignKey("ModuloServicioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_ControlAcceso.Roles.Rol", "rol")
                        .WithMany("usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RAcuerdoReparatorio.AcuerdoReparatorio", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_JR.REnvio.Envio", "Envio")
                        .WithMany()
                        .HasForeignKey("EnvioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RAsignacionEnvios.AsignacionEnvio", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_JR.REnvio.Envio", "Envio")
                        .WithMany()
                        .HasForeignKey("EnvioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany()
                        .HasForeignKey("ModuloServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RCitatorioRecordatorio.CitatorioRecordatorio", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_JR.RSesion.Sesion", "Sesion")
                        .WithMany()
                        .HasForeignKey("SesionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RDelitodelitosDerivados.DelitoDerivado", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_JR.REnvio.Envio", "Envio")
                        .WithMany()
                        .HasForeignKey("EnvioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.RDHecho.RDH", "RDH")
                        .WithMany()
                        .HasForeignKey("RDHId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.REnvio.Envio", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_JR.RExpediente.Expediente", "Expediente")
                        .WithMany()
                        .HasForeignKey("ExpedienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RExpediente.Expediente", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RFacilitadorNotificador.FacilitadorNotificador", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany()
                        .HasForeignKey("ModuloServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RNotificacion.RegistroNotificacion", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_JR.RExpediente.Expediente", "Expediente")
                        .WithMany()
                        .HasForeignKey("ExpedienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RRegistro.RegistroConclusion", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_JR.RExpediente.Expediente", "Expediente")
                        .WithMany()
                        .HasForeignKey("ExpedienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RSeguimientoCumplimiento.SeguimientoCumplimiento", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_JR.RAcuerdoReparatorio.AcuerdoReparatorio", "AcuerdoReparatorio")
                        .WithMany()
                        .HasForeignKey("AcuerdoReparatorioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RSesion.Sesion", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_JR.REnvio.Envio", "Envios")
                        .WithMany()
                        .HasForeignKey("EnvioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany()
                        .HasForeignKey("ModuloServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_JR.RSolicitanteRequerido.SolicitanteRequerido", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_JR.REnvio.Envio", "Envio")
                        .WithMany()
                        .HasForeignKey("EnvioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.Registro.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.ArchivosColaboraciones.ArchivosComparecencia", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_PI.InformacionJuridico.PresentacionesYC", "PresentacionesYC")
                        .WithMany()
                        .HasForeignKey("PresentacionesYCId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.ArchivosColaboraciones.ArchivosOAprension", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_PI.InformacionJuridico.OrdenAprension", "OrdenAprension")
                        .WithMany()
                        .HasForeignKey("OrdenAprensionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.CFotos.Fotos", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.RActosInvestigacion.RActoInvestigacion", "RActoInvestigacion")
                        .WithMany()
                        .HasForeignKey("RActoInvestigacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.CMedicosPR.CMedicoPR", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany()
                        .HasForeignKey("ModuloServicioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.Registro.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.CMedicosPSR.CMedicoPSR", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany()
                        .HasForeignKey("ModuloServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.Detenciones.Detencion", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Registro.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.Orientacion.RHecho", "RHecho")
                        .WithMany()
                        .HasForeignKey("RHechoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.Detenciones.HistorialDetencion", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_PI.Detenciones.Detencion", "Detencion")
                        .WithMany()
                        .HasForeignKey("DetencionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.Direcciones.Direccion", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_PI.PersonasVisita.PIPersonaVisita", "PIPersonaVisita")
                        .WithMany()
                        .HasForeignKey("PIPersonaVisitaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.EgresosTemporales.EgresoTemporal", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_PI.Detenciones.Detencion", "Detencion")
                        .WithMany()
                        .HasForeignKey("DetencionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.EstatusCustodias.EstatusCustodia", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_PI.Detenciones.Detencion", "Detencion")
                        .WithMany()
                        .HasForeignKey("DetencionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.FPersonas.FPersona", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_PI.PersonasVisita.PIPersonaVisita", "PIPersonaVisita")
                        .WithMany()
                        .HasForeignKey("PIPersonaVisitaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.InformacionJuridico.Arresto", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany()
                        .HasForeignKey("ModuloServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.InformacionJuridico.BusquedaDomicilio", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany()
                        .HasForeignKey("ModuloServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.InformacionJuridico.ComparecenciasElementos", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany()
                        .HasForeignKey("ModuloServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.InformacionJuridico.Exhorto", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany()
                        .HasForeignKey("ModuloServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.InformacionJuridico.OrdenAprension", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany()
                        .HasForeignKey("ModuloServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.InformacionJuridico.PresentacionesYC", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany()
                        .HasForeignKey("ModuloServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.InformacionJuridico.RequerimientosVarios", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany()
                        .HasForeignKey("ModuloServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.InformacionJuridico.TrasladosYCustodias", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany()
                        .HasForeignKey("ModuloServicioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.Informes.Informe", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_PI.PeritosAsignadosPI.PeritoAsignadoPI", "PeritoAsignadoPI")
                        .WithMany()
                        .HasForeignKey("PeritoAsignadoPIId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.OAprhensionBitacoras.OAprhensionBitacora", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_PI.InformacionJuridico.OrdenAprension", "OrdenAprension")
                        .WithMany()
                        .HasForeignKey("OrdenAprensionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.PeritosAsignadosPI.PeritoAsignadoPI", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany()
                        .HasForeignKey("ModuloServicioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.RActosInvestigacion.RActoInvestigacion", "RActoInvestigacion")
                        .WithMany()
                        .HasForeignKey("RActoInvestigacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.SolicitudesInteligencia.SolicitudInteligencia", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_PI.PeritosAsignadosPI.PeritoAsignadoPI", "PeritoAsignadoPI")
                        .WithMany()
                        .HasForeignKey("PeritoAsignadoPIId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.SolicitudesInteligencia.SolicitudInteligenciaAsig", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany()
                        .HasForeignKey("ModuloServicioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_PI.SolicitudesInteligencia.SolicitudInteligencia", "SolicitudInteligencia")
                        .WithMany()
                        .HasForeignKey("SolicitudInteligenciaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.SubirArchivos.SubirArchivo", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_PI.Detenciones.Detencion", "Detencion")
                        .WithMany()
                        .HasForeignKey("DetencionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_PI.Visitas.Visita", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_PI.Detenciones.Detencion", "Detencion")
                        .WithMany()
                        .HasForeignKey("DetencionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_PI.PersonasVisita.PIPersonaVisita", "PIPersonaVisita")
                        .WithMany()
                        .HasForeignKey("PIPersonaVisitaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_SP.DiligenciaIndicios.DiligenciaIndicio", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Indicios.Indicios", "Indicios")
                        .WithMany()
                        .HasForeignKey("IndiciosId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.Diligencias.RDiligencias", "RDiligencias")
                        .WithMany()
                        .HasForeignKey("RDiligenciasId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_SP.DocsDiligencias.DocsDiligencia", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Cat.Diligencias.RDiligencias", "RDiligencias")
                        .WithMany()
                        .HasForeignKey("RDiligenciasId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SIIGPP.Entidades.M_SP.PeritosAsignados.PeritoAsignado", b =>
                {
                    b.HasOne("SIIGPP.Entidades.M_Configuracion.Cat_Estructura.ModuloServicio", "ModuloServicio")
                        .WithMany()
                        .HasForeignKey("ModuloServicioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SIIGPP.Entidades.M_Cat.Diligencias.RDiligencias", "RDiligencias")
                        .WithMany()
                        .HasForeignKey("RDiligenciasId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
